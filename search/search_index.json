{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Manage your Kubernetes clusters with Emacs. Feature Overview With kubernetes-el , you can: View live-updated lists of Kubernetes resources; View manifests for core Kubernetes resources (Pods, Configmaps, Secrets, etc.); Edit various core Kubernetes resource kinds, e.g. Deployments and Configmaps; Fetch and follow logs; Exec into containers; Describe pods; Start and terminate a kubectl proxy server ; Much more. Development Roadmap The project is actively being developed. For known work items, see our Issues page . For discussions about higher-level direction of the project and development processes, see our Discussions page . Compatibility Key Definition Icon Fully supported Tested against, but not officially supported Unsupported Emacs Version Compatibility 25.x 26.x 27.x 28.x 29.x Kubernetes Servers Note More explicit guarantees around Kubernetes compatibility is in the works. See discussion #236 for details. We have no guarantees around Kubernetes server compatibility currently. Please report any issues to us that you encounter with specific versions. kubectl Note More explicit guarantees around Kubernetes compatibility is in the works. See discussion #236 for details. We have no guarantees around kubectl compatibility currently. Please report any issues to us that you encounter with specific versions. Contributing Yes please! \ud83d\ude3b See Contributing for details.","title":"Home"},{"location":"#feature-overview","text":"With kubernetes-el , you can: View live-updated lists of Kubernetes resources; View manifests for core Kubernetes resources (Pods, Configmaps, Secrets, etc.); Edit various core Kubernetes resource kinds, e.g. Deployments and Configmaps; Fetch and follow logs; Exec into containers; Describe pods; Start and terminate a kubectl proxy server ; Much more.","title":"Feature Overview"},{"location":"#development-roadmap","text":"The project is actively being developed. For known work items, see our Issues page . For discussions about higher-level direction of the project and development processes, see our Discussions page .","title":"Development Roadmap"},{"location":"#compatibility","text":"","title":"Compatibility"},{"location":"#key","text":"Definition Icon Fully supported Tested against, but not officially supported Unsupported","title":"Key"},{"location":"#emacs","text":"Version Compatibility 25.x 26.x 27.x 28.x 29.x","title":"Emacs"},{"location":"#kubernetes-servers","text":"Note More explicit guarantees around Kubernetes compatibility is in the works. See discussion #236 for details. We have no guarantees around Kubernetes server compatibility currently. Please report any issues to us that you encounter with specific versions.","title":"Kubernetes Servers"},{"location":"#kubectl","text":"Note More explicit guarantees around Kubernetes compatibility is in the works. See discussion #236 for details. We have no guarantees around kubectl compatibility currently. Please report any issues to us that you encounter with specific versions.","title":"kubectl"},{"location":"#contributing","text":"Yes please! \ud83d\ude3b See Contributing for details.","title":"Contributing"},{"location":"CHANGELOG/","text":"All notable changes to this project will be documented here. The format is based on Keep a Changelog , and this project adheres to semantic versioning . Upcoming Changed New overview for persistent volume claims. ( #223 ) Added a new interactive function, kubernetes-contexts-rename , for renaming contexts. ( #231 ) Added a new transient prefix, kubernetes-context , for acting on kubectl contexts, e.g. switching, renaming, etc. ( #231 ) Quitting via `Q` from the overview or any kubernetes-mode buffer now terminates all in-flight background processes. ( #244 ) The overview for configmaps now includes a new section to show a (truncated) view of the data. ( #245 ) Added mapping for E to enable entity editing in evil mode. ( #246 ). Added ability to enable and disable kubectl proxies via P P , with status display in the overview. ( #252 ) kubernetes-overview now returns an error if kubectl or kubernetes-kubectl-executable is not found on PATH. Refinements We\u2019ve taken a big step towards support for custom resources , overhauling the process-tracking module \u2013 how kubernetes-el keeps track of the various kubectl processes that it spins up \u2013 to be resource agnostic ( #234 ). This removes another section of the codebase that historically has had to be updated for every new resource that kubernetes-el wants to \u201csupport,\u201d allowing it to accommodate any and all resources. See: #237 ; #238 . Fixed Kubernetes tramp was not respecting set namespace as there are limitations to what we can pass to tramp-login-args ( #264 ). The fix adds one more step to update the kubectl configuration. 0.17.0 Changed Explicitly disable the Exec into container using vterm suffix of the kubernetes-exec transient if vterm is not installed ( #209 ) Fixed Some of the migrated transients from 0.16.0 were incomplete; we catch some (hopefully all of) the stragglers in this release. Thanks @noorul for the follow-through here. Fixed a bug in Ingress display. ( #214 ) 0.16.0 Changed Ability to find files in pods via tramp ( #167 ) Ability to exec into pods via vterm ( #169 ) Ability to edit resources ( #186 ) Migrate several popups from the defunct `magit-popup` to `transient` ( #190 , #193 , #198 , etc.)","title":"Changelog"},{"location":"CHANGELOG/#upcoming","text":"","title":"Upcoming"},{"location":"CHANGELOG/#changed","text":"New overview for persistent volume claims. ( #223 ) Added a new interactive function, kubernetes-contexts-rename , for renaming contexts. ( #231 ) Added a new transient prefix, kubernetes-context , for acting on kubectl contexts, e.g. switching, renaming, etc. ( #231 ) Quitting via `Q` from the overview or any kubernetes-mode buffer now terminates all in-flight background processes. ( #244 ) The overview for configmaps now includes a new section to show a (truncated) view of the data. ( #245 ) Added mapping for E to enable entity editing in evil mode. ( #246 ). Added ability to enable and disable kubectl proxies via P P , with status display in the overview. ( #252 ) kubernetes-overview now returns an error if kubectl or kubernetes-kubectl-executable is not found on PATH.","title":"Changed"},{"location":"CHANGELOG/#refinements","text":"We\u2019ve taken a big step towards support for custom resources , overhauling the process-tracking module \u2013 how kubernetes-el keeps track of the various kubectl processes that it spins up \u2013 to be resource agnostic ( #234 ). This removes another section of the codebase that historically has had to be updated for every new resource that kubernetes-el wants to \u201csupport,\u201d allowing it to accommodate any and all resources. See: #237 ; #238 .","title":"Refinements"},{"location":"CHANGELOG/#fixed","text":"Kubernetes tramp was not respecting set namespace as there are limitations to what we can pass to tramp-login-args ( #264 ). The fix adds one more step to update the kubectl configuration.","title":"Fixed"},{"location":"CHANGELOG/#0170","text":"","title":"0.17.0"},{"location":"CHANGELOG/#changed_1","text":"Explicitly disable the Exec into container using vterm suffix of the kubernetes-exec transient if vterm is not installed ( #209 )","title":"Changed"},{"location":"CHANGELOG/#fixed_1","text":"Some of the migrated transients from 0.16.0 were incomplete; we catch some (hopefully all of) the stragglers in this release. Thanks @noorul for the follow-through here. Fixed a bug in Ingress display. ( #214 )","title":"Fixed"},{"location":"CHANGELOG/#0160","text":"","title":"0.16.0"},{"location":"CHANGELOG/#changed_2","text":"Ability to find files in pods via tramp ( #167 ) Ability to exec into pods via vterm ( #169 ) Ability to edit resources ( #186 ) Migrate several popups from the defunct `magit-popup` to `transient` ( #190 , #193 , #198 , etc.)","title":"Changed"},{"location":"contributing/","text":"Hello there, intrepid contributor! Please see the home page for basic information about this project. If you would like to submit a bug report or contribute code or documentation, read over the guidelines below for the expectations. Then follow the development setup steps to get started. Contribution Guidelines The first thing you should do is browse the GitHub issues for discussion relating to the bug or feature you\u2019re interested in. Do your best here! Bug reports Make sure you\u2019re using the latest release of the package, and are using Emacs 25. If no ticket exists yet, you can write a new issue. Provide reproduction steps if you can, as well as your Emacs version and basic OS info. If the issue relates to integration with kubectl , make sure to supply your kubectl version. Code changes For code changes, please follow the following guidelines. Create a GitHub issue to track your work Fork the repository on GitHub Create a feature branch for your PR Take the time to write good commit messages; here are some practical tips. Run tests and make sure they all pass before submitting your PR. If your contribution is a user-facing change, please add an entry to CHANGELOG.org in the Unreleased section detailing it. See keepachangelog.com for an overview of this process. Development setup You will need some third-party tools to build this project. Emacs 25+, GNU Make and Cask are the most important. You do not need kubectl installed in order to run tests, but you do need it to run the package inside Emacs. If you want to contribute code changes, you should fork the repository. Otherwise clone the main repo. # If forked git clone \"git@github.com:<username>/kubernetes-el.git\" # Otherwise git clone \"git@github.com:kubernetes-el/kubernetes-el.git\" Running make will tell you if you need to install anything to hack on the project: cd kubernetes-el make As a final check, run tests to make sure everything works. All tests should pass. make test Implementation Notes Below are some general notes to help make sense of this beast. The main points to understand are: This package implements a state manager A timer is used to fetch information from Kubernetes and update the state Another timer is used to compile the state into a representation of the overview buffer, which is then interpreted. The separation of state from rendering improves testability, and makes it easier to develop view components that can be reused throughout the package. State Management This package implements its own state manager, which provides structured mechanisms for accessing the application state. The state can be read using the [kubernetes-state](kubernetes-state.el::(defun%20kubernetes-state%20()) routine, and the package implements a suite of accessor functions for reading and modifying specific parts of the state. The core of the state manager is the function [kubernetes-state-next](kubernetes-state.el::(defun%20kubernetes-state-next%20(state%20action%20&optional%20args)), which is a pure function taking the current state, an action to perform, and any arguments required for that action. Its return value is the next application state. In order to actually make changes to the state, the [kubernetes-state-update](kubernetes-state.el::(defun%20kubernetes-state-update%20(action%20&optional%20args)) routine is used to evaluate an action and arguments and store the updated state. Other update routines are built around it, providing a more structured interface to the state manager. State Updates A timer is used to trigger polling processes which query Kubernetes for its state and resources. This timer starts when the overview buffer is opened, and repeats until that buffer is killed. The polling timer runs a hook, kubernetes-poll-hook , which in turn runs the polling routines that update the application state. The routine [kubernetes-state-trigger-redraw](kubernetes-state.el::(defun%20kubernetes-state-trigger-redraw%20()) is the main routine used to trigger a redraw. It runs a hook, kubernetes-redraw-hook , which is used to signal that a redraw should occur. This routine is sometimes triggered manually, but is most often triggered by the redraw timer. See [kubernetes-timers](kubernetes-timers.el::(defvar%20kubernetes-timers\u2013redraw-timer%20nil). Aside from the polling processes, certain interactive commands, popup buffers and other UI elements can update parts of the state. Rendering is mostly decoupled from state management, so redrawing occurs asynchronously from state updates caused by polling. However, as a special case a redraw is triggered the first time each state variable is set. This ensures the UI displays values as soon as possible when the porcelain is started. Rendering This package implements a DSL (domain-specific language) used to specify how objects should be rendered in the UI. Rendering the overview buffer is divided into two stages: Take the current state and compile an AST of the desired changes Erase the buffer and interpret the AST to execute the changes ( here ). Future optimizations could include dirty checking to only update certain parts of the buffer. kubernetes-ast.el contains the implementation of the interpreter for the AST. It implements the core forms and provides a macro, [kubernetes-ast-define-component](kubernetes-ast.el::(defmacro%20kubernetes-ast-define-component%20(name%20arglist%20&rest%20body)), that allows the interpreter to be extended with custom components implemented in terms of the AST. Feature dependencies The chart below shows the dependencies between features, excluding kubernetes-state , kubernets-props and kubernetes-modes which are direct dependencies of many modules.","title":"Contributing"},{"location":"contributing/#contribution-guidelines","text":"The first thing you should do is browse the GitHub issues for discussion relating to the bug or feature you\u2019re interested in. Do your best here!","title":"Contribution Guidelines"},{"location":"contributing/#bug-reports","text":"Make sure you\u2019re using the latest release of the package, and are using Emacs 25. If no ticket exists yet, you can write a new issue. Provide reproduction steps if you can, as well as your Emacs version and basic OS info. If the issue relates to integration with kubectl , make sure to supply your kubectl version.","title":"Bug reports"},{"location":"contributing/#code-changes","text":"For code changes, please follow the following guidelines. Create a GitHub issue to track your work Fork the repository on GitHub Create a feature branch for your PR Take the time to write good commit messages; here are some practical tips. Run tests and make sure they all pass before submitting your PR. If your contribution is a user-facing change, please add an entry to CHANGELOG.org in the Unreleased section detailing it. See keepachangelog.com for an overview of this process.","title":"Code changes"},{"location":"contributing/#development-setup","text":"You will need some third-party tools to build this project. Emacs 25+, GNU Make and Cask are the most important. You do not need kubectl installed in order to run tests, but you do need it to run the package inside Emacs. If you want to contribute code changes, you should fork the repository. Otherwise clone the main repo. # If forked git clone \"git@github.com:<username>/kubernetes-el.git\" # Otherwise git clone \"git@github.com:kubernetes-el/kubernetes-el.git\" Running make will tell you if you need to install anything to hack on the project: cd kubernetes-el make As a final check, run tests to make sure everything works. All tests should pass. make test","title":"Development setup"},{"location":"contributing/#implementation-notes","text":"Below are some general notes to help make sense of this beast. The main points to understand are: This package implements a state manager A timer is used to fetch information from Kubernetes and update the state Another timer is used to compile the state into a representation of the overview buffer, which is then interpreted. The separation of state from rendering improves testability, and makes it easier to develop view components that can be reused throughout the package.","title":"Implementation Notes"},{"location":"contributing/#state-management","text":"This package implements its own state manager, which provides structured mechanisms for accessing the application state. The state can be read using the [kubernetes-state](kubernetes-state.el::(defun%20kubernetes-state%20()) routine, and the package implements a suite of accessor functions for reading and modifying specific parts of the state. The core of the state manager is the function [kubernetes-state-next](kubernetes-state.el::(defun%20kubernetes-state-next%20(state%20action%20&optional%20args)), which is a pure function taking the current state, an action to perform, and any arguments required for that action. Its return value is the next application state. In order to actually make changes to the state, the [kubernetes-state-update](kubernetes-state.el::(defun%20kubernetes-state-update%20(action%20&optional%20args)) routine is used to evaluate an action and arguments and store the updated state. Other update routines are built around it, providing a more structured interface to the state manager.","title":"State Management"},{"location":"contributing/#state-updates","text":"A timer is used to trigger polling processes which query Kubernetes for its state and resources. This timer starts when the overview buffer is opened, and repeats until that buffer is killed. The polling timer runs a hook, kubernetes-poll-hook , which in turn runs the polling routines that update the application state. The routine [kubernetes-state-trigger-redraw](kubernetes-state.el::(defun%20kubernetes-state-trigger-redraw%20()) is the main routine used to trigger a redraw. It runs a hook, kubernetes-redraw-hook , which is used to signal that a redraw should occur. This routine is sometimes triggered manually, but is most often triggered by the redraw timer. See [kubernetes-timers](kubernetes-timers.el::(defvar%20kubernetes-timers\u2013redraw-timer%20nil). Aside from the polling processes, certain interactive commands, popup buffers and other UI elements can update parts of the state. Rendering is mostly decoupled from state management, so redrawing occurs asynchronously from state updates caused by polling. However, as a special case a redraw is triggered the first time each state variable is set. This ensures the UI displays values as soon as possible when the porcelain is started.","title":"State Updates"},{"location":"contributing/#rendering","text":"This package implements a DSL (domain-specific language) used to specify how objects should be rendered in the UI. Rendering the overview buffer is divided into two stages: Take the current state and compile an AST of the desired changes Erase the buffer and interpret the AST to execute the changes ( here ). Future optimizations could include dirty checking to only update certain parts of the buffer. kubernetes-ast.el contains the implementation of the interpreter for the AST. It implements the core forms and provides a macro, [kubernetes-ast-define-component](kubernetes-ast.el::(defmacro%20kubernetes-ast-define-component%20(name%20arglist%20&rest%20body)), that allows the interpreter to be extended with custom components implemented in terms of the AST.","title":"Rendering"},{"location":"contributing/#feature-dependencies","text":"The chart below shows the dependencies between features, excluding kubernetes-state , kubernets-props and kubernetes-modes which are direct dependencies of many modules.","title":"Feature dependencies"},{"location":"how-to/","text":"Tip This page is structured loosely around the CRUD paradigm. This page provides \u201crecipes\u201d around how to perform common tasks with kubernetes-el . It can be considered an authoritive (if not necessarily comprehensive) overview of all that is possible with the package. Interacting with kubernetes-el Enter the package Keybinding Interactive function N/A M-x kubernetes-overview Quit the package Keybinding Interactive function Q M-x kubernetes-kill-buffers-and-processes kubernetes-kill-buffers-and-processes ( Q ) will kill all buffers associated with kubernetes-el , as well as terminate all associated background processes, e.g. those for querying resources. Create Read Changing contexts Keybinding Interactive function C c M-x kubernetes-contexts-use-context Query CRDs Not Yet Implemented kubernetes-el is currently set up to only work with core resource kinds, and a limited subset of those at that. Work is currently in-progress to implement support for CRDs ; see issue #69 . Changing namespace Keybinding Interactive function c n M-x kubernetes-set-namespace Info It is currently not possible to view resources for multiple/all namespaces. See issue #72 for details. Update Renaming contexts Keybinding Interactive function C r kubernetes-contexts-rename Delete TODO. Connectivity Start/terminate a proxy server Keybinding Interactive function P P N/A The overview buffer will update to reflect the new status of the proxy server. Enabled Disabled Port-forwarding Not Yet Implemented See issue #122 .","title":"How-To"},{"location":"how-to/#interacting-with-kubernetes-el","text":"","title":"Interacting with kubernetes-el"},{"location":"how-to/#enter-the-package","text":"Keybinding Interactive function N/A M-x kubernetes-overview","title":"Enter the package"},{"location":"how-to/#quit-the-package","text":"Keybinding Interactive function Q M-x kubernetes-kill-buffers-and-processes kubernetes-kill-buffers-and-processes ( Q ) will kill all buffers associated with kubernetes-el , as well as terminate all associated background processes, e.g. those for querying resources.","title":"Quit the package"},{"location":"how-to/#create","text":"","title":"Create"},{"location":"how-to/#read","text":"","title":"Read"},{"location":"how-to/#changing-contexts","text":"Keybinding Interactive function C c M-x kubernetes-contexts-use-context","title":"Changing contexts"},{"location":"how-to/#query-crds","text":"Not Yet Implemented kubernetes-el is currently set up to only work with core resource kinds, and a limited subset of those at that. Work is currently in-progress to implement support for CRDs ; see issue #69 .","title":"Query CRDs"},{"location":"how-to/#changing-namespace","text":"Keybinding Interactive function c n M-x kubernetes-set-namespace Info It is currently not possible to view resources for multiple/all namespaces. See issue #72 for details.","title":"Changing namespace"},{"location":"how-to/#update","text":"","title":"Update"},{"location":"how-to/#renaming-contexts","text":"Keybinding Interactive function C r kubernetes-contexts-rename","title":"Renaming contexts"},{"location":"how-to/#delete","text":"TODO.","title":"Delete"},{"location":"how-to/#connectivity","text":"","title":"Connectivity"},{"location":"how-to/#startterminate-a-proxy-server","text":"Keybinding Interactive function P P N/A The overview buffer will update to reflect the new status of the proxy server. Enabled Disabled","title":"Start/terminate a proxy server"},{"location":"how-to/#port-forwarding","text":"Not Yet Implemented See issue #122 .","title":"Port-forwarding"},{"location":"getting-started/","text":"About This Package kubernetes-el is a Kubernetes client for Emacs. With kubernetes-el you can manage your Kubernetes clusters much as you would with kubectl , but with greater interactivity, less typing/copy-paste, and generally better ease-of-use. kubernetes-el is still in early development stages, but we hope to enable ~80-90% of functionality you\u2019d typically use kubectl for\u2014with 10% of the typing. Warning This documentation assumes at least a working understanding of Kubernetes \u2013 what it is, its concepts, and how to work with it. If you\u2019re just beginning your Kubernetes journey, this documentation will do little to help you in that regard; we recommend looking elsewhere for general Kubernetes resources first. Tip kubernetes-el is secretly a wrapper around kubectl . Don\u2019t tell anyone. Regarding feature parity with kubectl kubernetes-el serves a similar purpose to kubectl . However , it does not aim to be a full replacement for kubectl . Rather, kubernetes-el aims to provide Emacs-based access to most common use cases. Installation MELPA This package is available on the MELPA package repository. See the instructions there for how to configure Emacs to pull packages from MELPA. Once you\u2019ve set that up, use your preferred method of configuring and installing packages. If you use use-package , the forms below will get you started. ( use-package kubernetes :ensure t :commands ( kubernetes-overview )) ;; If you want to pull in the Evil compatibility package. ( use-package kubernetes-evil :ensure t :after kubernetes ) Otherwise, you can install the packages with M-x package-install . Manual Note Installing manually requires Emacs 25 and Cask . git clone git@github.com:kubernetes-el/kubernetes-el.git cd kubernetes-el make && make install Start the package Warning Before starting the package, make sure you have kubectl installed. To start the package, use the entry-point command kubernetes-overview . M-x kubernetes-overview Tip You could consider defining a more concise alias for this command. For example, the following would allow you to enter the package via M-x k8s . ( fset 'k8s 'kubernetes-overview ) You\u2019ll enter the Overview pane. This is where you\u2019ll likely spend the majority of your time with kubernetes-el and where the majority of your interactions will take place. Next Steps You\u2019re done! Feel free to start poking around on your own; describe-mode will give you a good overview. Otherwise, for more structured guidance, check out the Tutorials section.","title":"Getting Started"},{"location":"getting-started/#about-this-package","text":"kubernetes-el is a Kubernetes client for Emacs. With kubernetes-el you can manage your Kubernetes clusters much as you would with kubectl , but with greater interactivity, less typing/copy-paste, and generally better ease-of-use. kubernetes-el is still in early development stages, but we hope to enable ~80-90% of functionality you\u2019d typically use kubectl for\u2014with 10% of the typing. Warning This documentation assumes at least a working understanding of Kubernetes \u2013 what it is, its concepts, and how to work with it. If you\u2019re just beginning your Kubernetes journey, this documentation will do little to help you in that regard; we recommend looking elsewhere for general Kubernetes resources first. Tip kubernetes-el is secretly a wrapper around kubectl . Don\u2019t tell anyone. Regarding feature parity with kubectl kubernetes-el serves a similar purpose to kubectl . However , it does not aim to be a full replacement for kubectl . Rather, kubernetes-el aims to provide Emacs-based access to most common use cases.","title":"About This Package"},{"location":"getting-started/#installation","text":"","title":"Installation"},{"location":"getting-started/#melpa","text":"This package is available on the MELPA package repository. See the instructions there for how to configure Emacs to pull packages from MELPA. Once you\u2019ve set that up, use your preferred method of configuring and installing packages. If you use use-package , the forms below will get you started. ( use-package kubernetes :ensure t :commands ( kubernetes-overview )) ;; If you want to pull in the Evil compatibility package. ( use-package kubernetes-evil :ensure t :after kubernetes ) Otherwise, you can install the packages with M-x package-install .","title":"MELPA"},{"location":"getting-started/#manual","text":"Note Installing manually requires Emacs 25 and Cask . git clone git@github.com:kubernetes-el/kubernetes-el.git cd kubernetes-el make && make install","title":"Manual"},{"location":"getting-started/#start-the-package","text":"Warning Before starting the package, make sure you have kubectl installed. To start the package, use the entry-point command kubernetes-overview . M-x kubernetes-overview Tip You could consider defining a more concise alias for this command. For example, the following would allow you to enter the package via M-x k8s . ( fset 'k8s 'kubernetes-overview ) You\u2019ll enter the Overview pane. This is where you\u2019ll likely spend the majority of your time with kubernetes-el and where the majority of your interactions will take place.","title":"Start the package"},{"location":"getting-started/#next-steps","text":"You\u2019re done! Feel free to start poking around on your own; describe-mode will give you a good overview. Otherwise, for more structured guidance, check out the Tutorials section.","title":"Next Steps"},{"location":"getting-started/tutorials/","text":"TODO.","title":"Tutorials"},{"location":"getting-started/tutorials/0-feature-overview/","text":"TODO.","title":"Feature Overview"}]}